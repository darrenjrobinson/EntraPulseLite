name: Beta Release (Multi-Platform)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0-beta.1)'
        required: true
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setup.outputs.version }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup version
        id: setup
        run: |
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

      - name: Clean up existing tag and release
        run: |
          # Delete existing tag locally and remotely
          git tag -d ${{ github.event.inputs.version }} 2>/dev/null || true
          git push origin --delete ${{ github.event.inputs.version }} 2>/dev/null || true
          
          # Delete existing GitHub release
          gh release delete ${{ github.event.inputs.version }} --yes 2>/dev/null || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  build-windows:
    needs: setup
    runs-on: windows-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup.outputs.version }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests (skip problematic ones)
        run: npm run test:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build Windows (unsigned)
        run: npm run build:electron:win
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist-release/*.exe

  build-macos:
    needs: setup
    runs-on: macos-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup.outputs.version }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests (skip problematic ones)
        run: npm run test:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build macOS (unsigned)
        run: npm run build:electron:mac
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            dist-release/*.dmg
            dist-release/*.zip

  build-linux:
    needs: setup
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup.outputs.version }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libxcomposite1 libxdamage1 libxrandr2 libgbm1 libxss1 libasound2-dev

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests (skip problematic ones)
        run: npm run test:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build Linux
        run: npm run build:electron:linux
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist-release/*.AppImage
            dist-release/*.deb
            dist-release/*.rpm
            dist-release/*.tar.gz

  release:
    needs: [setup, build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup.outputs.version }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        run: |
          # Create release
          gh release create ${{ needs.setup.outputs.version }} \
            --title "EntraPulse Lite ${{ needs.setup.outputs.version }}" \
            --notes "Beta release of EntraPulse Lite with multi-platform support." \
            --prerelease \
            artifacts/windows-build/* \
            artifacts/macos-build/* \
            artifacts/linux-build/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
