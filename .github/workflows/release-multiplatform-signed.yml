name: Multi-Platform Signed Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0-beta.1)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: true
        type: boolean

jobs:
  # Windows - Code signed with DigiCert certificate
  windows-signed:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests (skip problematic ones)
        run: npm run test:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build application (Windows signed)
        run: npm run build && npx electron-builder --win --publish=always
        env:
          NODE_OPTIONS: --max-old-space-size=8192
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}

  # macOS - Unsigned (or add Apple certificates later)
  macos-unsigned:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests (skip problematic ones)
        run: npm run test:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build application (macOS unsigned)
        run: npm run build && npx cross-env CSC_IDENTITY_AUTO_DISCOVERY=false electron-builder --mac --publish=always
        env:
          NODE_OPTIONS: --max-old-space-size=8192
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Linux - Unsigned (Linux typically doesn't use code signing)
  linux-unsigned:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --no-audit --no-fund
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Run tests (skip problematic ones)
        run: npm run test:ci
        env:
          CI: true
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Build application (Linux unsigned)
        run: npm run build && npx cross-env CSC_IDENTITY_AUTO_DISCOVERY=false electron-builder --linux --publish=always
        env:
          NODE_OPTIONS: --max-old-space-size=8192
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Mark release as prerelease if specified
  finalize-release:
    needs: [windows-signed, macos-unsigned, linux-unsigned]
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.prerelease == 'true' }}
    steps:
      - name: Set release as prerelease
        run: |
          gh release edit ${{ github.event.inputs.version }} --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
