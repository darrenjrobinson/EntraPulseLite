name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0-beta.1)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: true
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  build-and-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run security checks
        run: npm run security:check

      - name: Update package.json for prerelease
        if: ${{ github.event.inputs.prerelease == 'true' }}
        run: |
          npm version --no-git-tag-version ${{ github.event.inputs.version }}
          # Update publish config for prerelease
          node -e "
            const pkg = require('./package.json');
            pkg.build.publish.releaseType = 'prerelease';
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Update package.json for release
        if: ${{ github.event.inputs.prerelease != 'true' }}
        run: |
          npm version --no-git-tag-version ${{ github.event.inputs.version }}
          # Ensure publish config is set for release
          node -e "
            const pkg = require('./package.json');
            pkg.build.publish.releaseType = 'release';
            require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Build and release
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
