const{contextBridge,ipcRenderer}=require("electron");contextBridge.exposeInMainWorld("electronAPI",{auth:{login:()=>ipcRenderer.invoke("auth:login"),logout:()=>ipcRenderer.invoke("auth:logout"),getToken:()=>ipcRenderer.invoke("auth:getToken"),getCurrentUser:()=>ipcRenderer.invoke("auth:getCurrentUser"),requestPermissions:e=>ipcRenderer.invoke("auth:requestPermissions",e),getTokenWithPermissions:e=>ipcRenderer.invoke("auth:getTokenWithPermissions",e)},graph:{query:(e,r,i)=>ipcRenderer.invoke("graph:query",e,r,i)},llm:{chat:e=>ipcRenderer.invoke("llm:chat",e),isAvailable:()=>ipcRenderer.invoke("llm:isAvailable")},mcp:{call:(e,r,i)=>ipcRenderer.invoke("mcp:call",e,r,i),listServers:()=>ipcRenderer.invoke("mcp:listServers")},config:{get:()=>ipcRenderer.invoke("config:get"),update:e=>ipcRenderer.invoke("config:update",e)},on:(e,r)=>{["auth-status-changed","chat-message","graph-api-call"].includes(e)&&ipcRenderer.on(e,r)},removeAllListeners:e=>{["auth-status-changed","chat-message","graph-api-call"].includes(e)&&ipcRenderer.removeAllListeners(e)}});